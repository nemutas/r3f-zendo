{"version":3,"sources":["libs/static.ts","libs/store.ts","components/button/BloomButton.tsx","components/button/LinkButtons.tsx","components/viewer/Effects.tsx","libs/animation.ts","components/viewer/FakeShadow.tsx","components/viewer/WaveShpere.tsx","components/viewer/Zendo.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["InitialValue","color","amplitude","frequency","shadowColor","lighten","toHexString","shadowRadius","shadowBlur","bloomEnabled","state","proxy","effectState","enabled","BloomButton","snap","useSnapshot","IconButton","size","onClick","LinkButtons","css","styles","container","href","target","rel","extend","EffectComposer","RenderPass","ShaderPass","UnrealBloomPass","Effects","composerRef","useRef","useThree","gl","scene","camera","toneMappingExposure","Math","pow","useFrame","current","render","ref","args","attachArray","strength","radius","threshold","tweenColor","uniform","targetColor","THREE","gsap","to","value","r","g","b","ease","Linear","easeOut","duration","tweenAmplitude","Elastic","tweenFrequency","FakeShadow","props","position","rotation","PI","blur","planeSize","ratio","material","useMemo","mat","uniforms","u_color","u_radius","u_smooth","u_time","u_amplitude","u_frequency","vertexShader","fragmentShader","transparent","useEffect","clock","getElapsedTime","WaveShpere","u_start","u_end","u_alpha","wireframe","random","onPointerEnter","document","body","style","cursor","onPointerLeave","Zendo","fov","aspect","window","innerWidth","innerHeight","near","far","dpr","devicePixelRatio","attach","OrbitControls","enablePan","enableZoom","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","addEventListener","undefined","hasEventListener","removeEventListener","dispatchEvent","bloomButton","linkButtons","titleConteiner","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","theme","React","createTheme","palette","mode","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.089b67a7.chunk.js","sourcesContent":["import { color } from 'csx';\r\n\r\nexport const InitialValue = {\r\n\tcolor: '#ade465',\r\n\tamplitude: 0.4,\r\n\tfrequency: 3,\r\n\tshadowColor: color('#ade465').lighten(0.2).toHexString(),\r\n\tshadowRadius: 0.5,\r\n\tshadowBlur: 0.5,\r\n\tbloomEnabled: false\r\n}\r\n","import { proxy } from 'valtio';\r\nimport { InitialValue } from './static';\r\n\r\nexport const state = proxy({\r\n\tshadowColor: InitialValue.shadowColor,\r\n\tamplitude: InitialValue.amplitude,\r\n\tfrequency: InitialValue.frequency\r\n})\r\n\r\nexport const effectState = proxy({\r\n\tenabled: InitialValue.bloomEnabled\r\n})\r\n","import React, { VFC } from 'react';\r\nimport { BsLightbulb, BsLightbulbOff } from 'react-icons/bs';\r\nimport { useSnapshot } from 'valtio';\r\nimport { IconButton } from '@mui/material';\r\nimport { effectState } from '../../libs/store';\r\n\r\nexport const BloomButton: VFC = () => {\r\n\tconst snap = useSnapshot(effectState)\r\n\r\n\treturn (\r\n\t\t<IconButton\r\n\t\t\tsize=\"large\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\teffectState.enabled = !snap.enabled\r\n\t\t\t}}>\r\n\t\t\t{snap.enabled ? <BsLightbulbOff color=\"#fff\" /> : <BsLightbulb color=\"#fff\" />}\r\n\t\t</IconButton>\r\n\t)\r\n}\r\n","import React, { VFC } from 'react';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { SiQiita } from 'react-icons/si';\r\nimport { css } from '@emotion/react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nexport const LinkButtons: VFC = () => {\r\n\treturn (\r\n\t\t<div css={styles.container}>\r\n\t\t\t<a href=\"https://github.com/nemutas/r3f-zendo\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t<IconButton size=\"large\">\r\n\t\t\t\t\t<AiFillGithub color=\"#fff\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</a>\r\n\t\t\t<a href=\"https://qiita.com/nemutas\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t<IconButton size=\"large\">\r\n\t\t\t\t\t<SiQiita color=\"#55C500\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst styles = {\r\n\tcontainer: css`\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: auto auto;\r\n\t\tgrid-row-gap: 10px;\r\n\t`\r\n}\r\n","import React, { useRef, VFC } from 'react';\r\nimport { EffectComposer, RenderPass, ShaderPass, UnrealBloomPass } from 'three-stdlib';\r\nimport { useSnapshot } from 'valtio';\r\nimport { extend, useFrame, useThree } from '@react-three/fiber';\r\nimport { effectState } from '../../libs/store';\r\n\r\nextend({ EffectComposer, RenderPass, ShaderPass, UnrealBloomPass })\r\n\r\nexport const Effects: VFC = () => {\r\n\tconst snap = useSnapshot(effectState)\r\n\r\n\tconst composerRef = useRef<EffectComposer>(null)\r\n\tconst { gl, scene, camera } = useThree()\r\n\tgl.toneMappingExposure = Math.pow(0.9, 4.0)\r\n\r\n\tuseFrame(() => {\r\n\t\tcomposerRef.current!.render()\r\n\t}, 1)\r\n\r\n\treturn (\r\n\t\t<effectComposer ref={composerRef} args={[gl]}>\r\n\t\t\t<renderPass attachArray=\"passes\" args={[scene, camera]} />\r\n\t\t\t<unrealBloomPass attachArray=\"passes\" enabled={snap.enabled} strength={3} radius={1.2} threshold={0} />\r\n\t\t</effectComposer>\r\n\t)\r\n}\r\n","import { Elastic, gsap, Linear } from 'gsap';\r\nimport * as THREE from 'three';\r\n\r\n/**\r\n * color tween animation\r\n * @param uniform e.g. material.uniforms.u_color\r\n * @param targetColor css color\r\n */\r\nexport const tweenColor = (uniform: THREE.IUniform<any>, targetColor: string) => {\r\n\tconst color = new THREE.Color(targetColor)\r\n\tgsap.to(uniform.value, { r: color.r, g: color.g, b: color.b, ease: Linear.easeOut, duration: 1 })\r\n}\r\n\r\n/**\r\n * amplitude tween animation\r\n * @param uniform e.g. material.uniforms.u_amplitude\r\n * @param target value\r\n */\r\nexport const tweenAmplitude = (uniform: THREE.IUniform<any>, target: number) => {\r\n\tgsap.to(uniform, { value: target, ease: Elastic.easeOut, duration: 1 })\r\n}\r\n\r\n/**\r\n * frequency tween animation\r\n * @param uniform e.g. material.uniforms.u_frequency\r\n * @param target value\r\n */\r\nexport const tweenFrequency = (uniform: THREE.IUniform<any>, target: number) => {\r\n\tgsap.to(uniform, { value: target, ease: Elastic.easeOut, duration: 1 })\r\n}\r\n","import React, { useEffect, useMemo, VFC } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useSnapshot } from 'valtio';\r\nimport { Plane } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { tweenAmplitude, tweenColor, tweenFrequency } from '../../libs/animation';\r\nimport { InitialValue } from '../../libs/static';\r\nimport { state } from '../../libs/store';\r\n\r\ntype ShadowPlaneProps = {\r\n\tposition?: [number, number, number]\r\n\trotation?: [number, number, number]\r\n\tcolor?: THREE.Color\r\n\tradius?: number\r\n\tblur?: number\r\n\tamplitude?: number\r\n\tfrequency?: number\r\n}\r\n\r\nexport const FakeShadow: VFC<ShadowPlaneProps> = props => {\r\n\tconst {\r\n\t\tposition = [0, 0, 0],\r\n\t\trotation = [-Math.PI / 2, 0, 0],\r\n\t\tcolor,\r\n\t\tradius = InitialValue.shadowRadius,\r\n\t\tblur = InitialValue.shadowBlur,\r\n\t\tamplitude,\r\n\t\tfrequency\r\n\t} = props\r\n\r\n\tconst snap = useSnapshot(state)\r\n\r\n\tconst planeSize = radius * 2 + blur + 0.5\r\n\tconst ratio = 1 / planeSize\r\n\r\n\tconst material = useMemo(() => {\r\n\t\tconst mat = new THREE.ShaderMaterial({\r\n\t\t\tuniforms: {\r\n\t\t\t\tu_color: { value: new THREE.Color(InitialValue.shadowColor) },\r\n\t\t\t\tu_radius: { value: InitialValue.shadowRadius },\r\n\t\t\t\tu_smooth: { value: InitialValue.shadowBlur },\r\n\t\t\t\tu_time: { value: 0.0 },\r\n\t\t\t\tu_amplitude: { value: InitialValue.amplitude },\r\n\t\t\t\tu_frequency: { value: InitialValue.frequency }\r\n\t\t\t},\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader\r\n\t\t})\r\n\t\tmat.transparent = true\r\n\t\treturn mat\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('init')\r\n\t\tcolor && (material.uniforms.u_color.value = color)\r\n\t\tmaterial.uniforms.u_radius.value = radius * ratio\r\n\t\tmaterial.uniforms.u_smooth.value = blur * ratio\r\n\t\tamplitude && (material.uniforms.u_amplitude.value = amplitude)\r\n\t\tfrequency && (material.uniforms.u_frequency.value = frequency)\r\n\t}, [amplitude, blur, color, frequency, material, radius, ratio])\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('change')\r\n\t\ttweenColor(material.uniforms.u_color, snap.shadowColor)\r\n\t\ttweenAmplitude(material.uniforms.u_amplitude, snap.amplitude)\r\n\t\ttweenFrequency(material.uniforms.u_frequency, snap.frequency)\r\n\t}, [material.uniforms.u_amplitude, material.uniforms.u_color, material.uniforms.u_frequency, snap])\r\n\r\n\tuseFrame(({ clock }) => {\r\n\t\tmaterial.uniforms.u_time.value = clock.getElapsedTime()\r\n\t})\r\n\r\n\treturn <Plane args={[planeSize, planeSize]} material={material} position={position} rotation={rotation} />\r\n}\r\n\r\n// ==============================================\r\n// Shader\r\n\r\nconst vertexShader = `\r\nvarying vec2 v_uv;\r\n\r\nvoid main() {\r\n  v_uv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}\r\n`\r\n\r\nconst fragmentShader = `\r\nvarying vec2 v_uv;\r\nuniform vec3 u_color;\r\nuniform float u_radius;\r\nuniform float u_smooth;\r\n\r\nuniform float u_time;\r\nuniform float u_amplitude;\r\nuniform float u_frequency;\r\n\r\nvoid main() {\r\n  float dist = distance(vec2(0.5), v_uv);\r\n  float circle = 1.0 - smoothstep(u_radius - u_smooth, u_radius + u_smooth, dist);\r\n\t//----------------------------------------------------------------------------------------------------\r\n\t// The top(1.0) and bottom(-1.0) of the sphere have a radius around the y-axis that is close to zero,\r\n\t// so the shadow is affected at -0.8 from the center.\r\n\r\n\tfloat ratio = u_amplitude * (sin(u_time - 0.8 * u_frequency) + 1.0) / 2.0 + (1.0 - u_amplitude);\r\n\t//----------------------------------------------------------------------------------------------------\r\n\t\r\n  gl_FragColor = vec4(u_color * circle * ratio, 1.0 * circle * ratio);\r\n}\r\n`\r\n","import { color } from 'csx';\r\nimport React, { useMemo, VFC } from 'react';\r\nimport * as THREE from 'three';\r\nimport { Sphere } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { tweenAmplitude, tweenColor, tweenFrequency } from '../../libs/animation';\r\nimport { InitialValue } from '../../libs/static';\r\nimport { state } from '../../libs/store';\r\nimport { FakeShadow } from './FakeShadow';\r\n\r\nexport const WaveShpere: VFC = () => {\r\n\tconst material = useMemo(() => {\r\n\t\tconst mat = new THREE.ShaderMaterial({\r\n\t\t\tuniforms: {\r\n\t\t\t\t// wave\r\n\t\t\t\tu_time: { value: 0 },\r\n\t\t\t\tu_amplitude: { value: InitialValue.amplitude },\r\n\t\t\t\tu_frequency: { value: InitialValue.frequency },\r\n\t\t\t\t// glow\r\n\t\t\t\tu_color: { value: new THREE.Color(InitialValue.color) },\r\n\t\t\t\tu_start: { value: 0 },\r\n\t\t\t\tu_end: { value: 1 },\r\n\t\t\t\tu_alpha: { value: 1 }\r\n\t\t\t},\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader,\r\n\t\t\twireframe: false\r\n\t\t})\r\n\t\tmat.transparent = true\r\n\t\treturn mat\r\n\t}, [])\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst targetColor = `hsl(${Math.random() * 360}, 70%, 65%)`\r\n\t\ttweenColor(material.uniforms.u_color, targetColor)\r\n\r\n\t\tconst amplitude = Math.random()\r\n\t\ttweenAmplitude(material.uniforms.u_amplitude, amplitude)\r\n\r\n\t\tconst frequency = Math.random() * (10 - 1) + 1\r\n\t\ttweenFrequency(material.uniforms.u_frequency, frequency)\r\n\r\n\t\t// set global state\r\n\t\tstate.shadowColor = color(targetColor).lighten(0.2).toHexString()\r\n\t\tstate.amplitude = amplitude\r\n\t\tstate.frequency = frequency\r\n\t}\r\n\r\n\tconst handlePointerEnter = () => {\r\n\t\tdocument.body.style.cursor = 'pointer'\r\n\t}\r\n\r\n\tconst handlePointerLeave = () => {\r\n\t\tdocument.body.style.cursor = 'auto'\r\n\t}\r\n\r\n\tuseFrame(({ clock }) => {\r\n\t\tmaterial.uniforms.u_time.value = clock.getElapsedTime()\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Sphere\r\n\t\t\t\targs={[0.8, 128, 128]}\r\n\t\t\t\tmaterial={material}\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tonPointerEnter={handlePointerEnter}\r\n\t\t\t\tonPointerLeave={handlePointerLeave}\r\n\t\t\t/>\r\n\t\t\t<FakeShadow position={[0, -1.5, 0]} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n// ==============================================\r\n// Shader\r\n\r\nconst vertexShader = `\r\nuniform float u_time;\r\nuniform float u_amplitude;\r\nuniform float u_frequency;\r\n\r\nvarying vec3 v_position;\r\nvarying vec3 v_normal;\r\n\r\nvoid main() {\r\n  // wave\r\n  //----------------------------------\r\n  // f1 = sin(t + x * f) -> -1 ~ 1\r\n  // f2 = (f1 + 1) / 2   -> 0 ~ 1\r\n  // f3 = a * f2         -> 0 ~ a\r\n  // f4 = f3 + (1 - a)   -> (1 - a) ~ 1\r\n  //----------------------------------\r\n  float ratio = u_amplitude * (sin(u_time + position.y * u_frequency) + 1.0) / 2.0 + (1.0 - u_amplitude);\r\n  vec4 pos = vec4(vec3(position.x * ratio, position.y, position.z * ratio), 1.0);\r\n    \r\n  // glow\r\n  pos = modelViewMatrix * pos;\r\n  v_position = pos.xyz;\r\n  v_normal = normalMatrix * normal;\r\n\r\n  gl_Position = projectionMatrix * pos;\r\n}\r\n`\r\n\r\nconst fragmentShader = `\r\nuniform vec3 u_color;\r\nuniform float u_start;\r\nuniform float u_end;\r\nuniform float u_alpha;\r\n\r\nvarying vec3 v_position;\r\nvarying vec3 v_normal;\r\n\r\nvoid main() {\r\n  // glow\r\n  vec3 normal = normalize(v_normal);\r\n  vec3 eye = normalize(-v_position);\r\n  float rim = smoothstep(u_start, u_end, 1.0 - dot(normal, eye));\r\n  float ratio = clamp(rim, 0.0, 1.0);\r\n  \r\n  // gl_FragColor = vec4(ratio * u_alpha * u_color, 1.0);\r\n  gl_FragColor = vec4(u_color * ratio, u_alpha + ratio);\r\n}\r\n`\r\n","import React, { VFC } from 'react';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Effects } from './Effects';\r\nimport { WaveShpere } from './WaveShpere';\r\n\r\nexport const Zendo: VFC = () => {\r\n\treturn (\r\n\t\t<Canvas\r\n\t\t\tcamera={{\r\n\t\t\t\tposition: [0, 0, 4],\r\n\t\t\t\tfov: 50,\r\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\r\n\t\t\t\tnear: 0.1,\r\n\t\t\t\tfar: 2000\r\n\t\t\t}}\r\n\t\t\tdpr={window.devicePixelRatio}>\r\n\t\t\t{/* scene */}\r\n\t\t\t<color attach=\"background\" args={['#000']} />\r\n\t\t\t{/* camera controller */}\r\n\t\t\t<OrbitControls\r\n\t\t\t\tattach=\"orbitControls\"\r\n\t\t\t\ttarget={[0, -0.3, 0]}\r\n\t\t\t\tenablePan={false}\r\n\t\t\t\tenableZoom={false}\r\n\t\t\t\tmaxPolarAngle={Math.PI / 2}\r\n\t\t\t\tminAzimuthAngle={0}\r\n\t\t\t\tmaxAzimuthAngle={0}\r\n\t\t\t\taddEventListener={undefined}\r\n\t\t\t\thasEventListener={undefined}\r\n\t\t\t\tremoveEventListener={undefined}\r\n\t\t\t\tdispatchEvent={undefined}\r\n\t\t\t/>\r\n\t\t\t{/* objects */}\r\n\t\t\t<WaveShpere />\r\n\t\t\t{/* effects */}\r\n\t\t\t<Effects />\r\n\t\t\t{/* debug */}\r\n\t\t\t{/* <Stats /> */}\r\n\t\t\t{/* <axesHelper args={[1]} /> */}\r\n\t\t</Canvas>\r\n\t)\r\n}\r\n","import React, { VFC } from 'react';\nimport { css } from '@emotion/react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { BloomButton } from './button/BloomButton';\nimport { LinkButtons } from './button/LinkButtons';\nimport { Zendo } from './viewer/Zendo';\n\nexport const App: VFC = () => {\n\tconst theme = React.useMemo(() => createTheme({ palette: { mode: 'dark' } }), [])\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<div css={styles.container}>\n\t\t\t\t{/* canvas */}\n\t\t\t\t<Zendo />\n\t\t\t\t{/* button */}\n\t\t\t\t<div css={styles.bloomButton}>\n\t\t\t\t\t<BloomButton />\n\t\t\t\t</div>\n\t\t\t\t<div css={styles.linkButtons}>\n\t\t\t\t\t<LinkButtons />\n\t\t\t\t</div>\n\t\t\t\t{/* title */}\n\t\t\t\t<div css={styles.titleConteiner}>\n\t\t\t\t\t<div css={styles.title}>蠕動 - Zendo -</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t)\n}\n\nconst styles = {\n\tcontainer: css`\n\t\tposition: relative;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t`,\n\tbloomButton: css`\n\t\tposition: absolute;\n\t\ttop: 20px;\n\t\tright: 20px;\n\t`,\n\tlinkButtons: css`\n\t\tposition: absolute;\n\t\tbottom: 20px;\n\t\tright: 20px;\n\t`,\n\ttitleConteiner: css`\n\t\tposition: absolute;\n\t\ttop: 5px;\n\t\tleft: 20px;\n\t`,\n\ttitle: css`\n\t\tfont-size: clamp(1rem, 10vw, 3rem);\n\t\tfont-family: 'Yuji Mai', sans-serif;\n\t\tuser-select: none;\n\t`\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}